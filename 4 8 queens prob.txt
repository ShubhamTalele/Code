def is_safe(board, row, col):
    # Check if the current position is safe for the queen
    # Check row, column, and diagonals
    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, 8), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solve_queens(board, col):
    if col >= 8:
        return True

    for i in range(8):
        if is_safe(board, i, col):
            board[i][col] = 1

            if solve_queens(board, col + 1):
                return True

            board[i][col] = 0

    return False


# Solve the 8 Queens Problem
chessboard = [[0] * 8 for _ in range(8)]

if solve_queens(chessboard, 0):
    for row in chessboard:
        print(" ".join(map(str, row)))
else:
    print("No solution found.")